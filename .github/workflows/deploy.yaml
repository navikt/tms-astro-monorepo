name: "Deploy app-a"
on:
  push:
    branches:
      - "main"
    paths:
      - "apps/app-a/**"
      - "package.json"

permissions:
  contents: "read"
  id-token: "write"
  packages: "write"

jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: ./apps/app-a

    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-node@v4"
        with:
          node-version: 22
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"

      - name: "Install dependencies"
        working-directory: ./
        run: "npm ci"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: "Build application"
        run: "npm run build"

      - name: "Upload to cdn"
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: min-side
          source: ./apps/app-a/dist/client/_astro
          destination: 'tms-min-side'
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

      - name: "Build and push"
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: min-side
          dockerfile: ./apps/app-a/Dockerfile
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy:
    runs-on: "ubuntu-latest"
    needs: "build"
    strategy:
      matrix:
        cluster: [ dev-gcp ]
    steps:
      - uses: "actions/checkout@v4"
      - name: "Deploy"
        uses: "nais/deploy/actions/deploy@v2"
        env:
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: apps/app-a/nais/${{ matrix.cluster }}/nais.yaml
          VAR: image=${{ needs.build.outputs.image }},version=${{ github.sha }}